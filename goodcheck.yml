rules:
  - id: private.function
    pattern:
      regexp: private [^_]
    message: Please put "_" onto the prefix of private variables or functions.
    glob: "*.ts"

  - id: handle.event
    message: |
      Name of function for internal event handler processing
      will be name as “handle + event handler name + Element name”
      ex: _handleClickDropdownToggle
          _handleChangeDropdownToggle
          ...
    trigger:
      - pattern:
          regexp: (@click)((?!_handleClick).)*$
        glob: "*.ts"
      - pattern:
          regexp: (@change)((?!_handleChange).)*$
        glob: "*.ts"
      - pattern:
          regexp: (@focus)((?!_handleFocus).)*$
        glob: "*.ts"
      - pattern:
          regexp: (@blur)((?!_handleBlur).)*$
        glob: "*.ts"
      - pattern:
          regexp: (@keydown)((?!_handleKeyDown).)*$
        glob: "*.ts"
      - pattern:
          regexp: (@mousedown)((?!_handleMouseDown).)*$
        glob: "*.ts"
      - pattern:
          regexp: (@mouseover)((?!_handleMouseOver).)*$
        glob: "*.ts"
      - pattern:
          regexp: (@mouseleave)((?!_handleMouseLeave).)*$
        glob: "*.ts"

  - id: not.exist.function.create.render.root
    not:
      pattern:
        regexp: createRenderRoot\(\)([\s\S]*?) return this;([\s\S]*?)}
    message: |
      Please add createRenderRoot function to this file
      ex: createRenderRoot() {
        return this;
      }
    glob: "**/index.ts"

  - id: not.exist.style.tag
    not:
      pattern:
        regexp: return html([\s\S]*?)<style>([\s\S]*?)
    message: |
      Please describe style tag inside HTML to perform the styling.
      ex: render() {
        return html`
          <style>
            kuc-component {
              display: inline-block;
            }
          </style>
        `;
      }
    glob: "**/index.ts"

  - id: not.using.image
    pattern:
      regexp: data\:image\/.*base64|\.png
    message: |
      Please using svg element code
      ex: private _getCloseButtonSvgTemplate() {
        return svg`
          <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z"/>
          </svg>
        `;
      }
    glob: "*.ts"

  - id: not.using.custom.event
    not:
      pattern:
        regexp: new CustomEvent\(
    message: |
      Please using CustomEvent to implement events handling
      ex: private _dispatchCustomEvent(eventName: string, detail?: object) {
        const changeEvent = new CustomEvent(eventName, {
          detail,
          bubbles: true,
          composed: true
        });
        return this.dispatchEvent(changeEvent);
      }
    glob:
      - "src/**/index.ts"
      - "src/mobile/**/index.ts"

  - id: color.code.not.be.6.digits
    pattern:
      regexp: \#(?![a-z0-9]{6})
    message: |
      Color codes should be written in lowercase and 6 digits
      ex: #d4d7d7;
    glob: "*.ts"

  - id: using.prefix.kuc
    pattern:
      regexp: class="(?!(kuc-))
    message: |
      Please start class css with kuc prefix
      ex: kuc-dropdown
    glob: "*.ts"

  - id: dom.structure
    pattern:
      regexp: id="(?!\${this._GUID}-)[^"]+"
    message: |
      Please put uuid to id using _generateGUID function
      ex: <div
            class="kuc-multi-choice__label"
            id="${this._GUID}-label">
          </div>
    glob: "*.ts"