name: Upload v1 release

on:
  repository_dispatch:
     types: release_dispatch_v1
jobs:
  On_upload:
    name: Upload integrity and package to release
    runs-on: ubuntu-18.04
    steps:
    # Use this to check automation test
    # - name: Check if automation test is fail
    #   if: github.event.client_payload.status != 'success'
    #   run: exit 1
    - uses: actions/checkout@v2
    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: 14
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-
    - name: Install dependencies
      run: |
        npm ci
        npm i @actions/core
    - name: Check version
      id: check_version
      uses: ./.github/actions/check_version
    - name: Build lib/esm umd
      run: |
        npm run build:esm
        npm run build:umd_prod
    - name: Generate package binary file
      id: generate_binary
      uses: ./.github/actions/generate_binary_file
    - name: Upload integrity artifact
      uses: actions/upload-artifact@v2
      with:
        name: v${{ steps.check_version.outputs.version }}-integrity
        path: ./${{ steps.generate_binary.outputs.integrity }}
    - uses: fregante/setup-git-user@v1
    - name: Commit package-lock.json and push to remote
      run: |
          git add ./package-lock.json
          git commit -m "update package-lock.json after release"
          git push origin :refs/tags/refs/heads/master
    - name: Upload package to release[binaries]
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.WORKFLOW_TOKEN }}
        file: kintone-ui-component-${{ steps.check_version.outputs.version }}.tgz
        asset_name: kintone-ui-component-${{ steps.check_version.outputs.version }}.tgz
        tag: v${{ steps.check_version.outputs.version }}
        overwrite: true